CC        = @CC@
CXX       = @CXX@
EXECLINEB = @EXECLINEB@
GHC       = @GHC@
NIM       = @NIM@
PERL5     = @PERL5@
PERL6     = @PERL6@
PHP       = @PHP@
PYTHON    = @PYTHON@
RUBY      = @RUBY@
ZSH       = @ZSH@

CFLAGS = @CFLAGS@
CXXFLAGS = @CXXFLAGS@
CPPFLAGS = @CPPFLAGS@

NIMFLAGS = @NIMFLAGS@

CRAM = @CRAM@
CRAMFLAGS = @CRAMFLAGS@

RST2HTML = @RST2HTML@
RST2HTMLFLAGS = @RST2HTMLFLAGS@

impls  =

ifdef CC
impls += c/piecemeal
impls += c/snprintf
impls += c/strlcat
impls += c/tblrot
impls += c/tblrot2
impls += c/ternaries
impls += c/trivial
endif

ifdef CXX
impls += cpp/fun
impls += cpp/irange
impls += cpp/trivial
impls += cpp/tts
endif

ifdef EXECLINEB
impls += execline/trivial
endif

ifdef GHC
impls += haskell/trivial
endif

ifdef NIM
impls += nim/trivial
endif

ifdef PERL5
impls += perl5/trivial
endif

ifdef PERL6
impls += perl6/given
impls += perl6/trivial
endif

ifdef PHP
impls += php/trivial
endif

ifdef PYTHON
impls += python/trivial
endif

ifdef RUBY
impls += ruby/case
impls += ruby/monkey
impls += ruby/trivial
endif

ifdef ZSH
impls += zsh/patmat
impls += zsh/trivial
endif

crud   =
crud  += */*.o
crud  += haskell/*.hi

.PHONY: all
all: $(impls)

c/strlcat: LDLIBS = -lbsd

$(filter haskell/%,$(impls)): %: %.hs
	$(GHC) $(GHCFLAGS) $<

$(filter nim/%,$(impls)): %: %.nim
	$(NIM) $(NIMFLAGS) compile $<

$(filter execline/%,$(impls)): %: %.xl
	$(call mkexe,$(EXECLINEB))

$(filter perl5/%,$(impls)): %: %.pl
	$(call mkexe,$(PERL5))

$(filter perl6/%,$(impls)): %: %.pl
	$(call mkexe,$(PERL6))

$(filter php/%,$(impls)): %: %.php
	$(call mkexe,$(PHP))

$(filter python/%,$(impls)): %: %.py
	$(call mkexe,$(PYTHON))

$(filter ruby/%,$(impls)): %: %.rb
	$(call mkexe,$(RUBY))

$(filter zsh/%,$(impls)): %: %.zsh
	$(call mkexe,$(ZSH))

define mkexe
  sed -e '1s@!#[^[:space:]]*@!#$1@' < $< > $@.tmp
	install -m 0755 $@.tmp $@
	$(RM) $@.tmp
endef

.PHONY: html
html: README.html

README.html: README.rst
	$(RST2HTML) $(RST2HTMLFLAGS) $< $@

.PHONY: clean
clean:
	$(RM) $(impls) $(crud) $(tests) $(patsubst %,%.err,$(tests))


tests = $(patsubst %,%.t,$(impls))

$(tests): %:
	install t/happy-path.tpl $@

.PHONY: tests
tests: $(tests)


.PHONY: check
check: $(impls) $(tests)
	env -i TESTROOT="$$PWD" PATH="$$PATH" $(CRAM) $(CRAMFLAGS) $(tests)
